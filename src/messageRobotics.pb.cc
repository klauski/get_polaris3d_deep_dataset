// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messageRobotics.proto

#include "messageRobotics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_messageRobotics_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messageRobotics_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_mRobotMetadata;
}  // namespace protobuf_messageRobotics_2eproto
class mControl8ChDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<mControl8Ch>
      _instance;
} _mControl8Ch_default_instance_;
class mDifferentialControl8ChDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<mDifferentialControl8Ch>
      _instance;
} _mDifferentialControl8Ch_default_instance_;
class mRobotMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<mRobotMetadata>
      _instance;
} _mRobotMetadata_default_instance_;
class mPathMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<mPathMetadata>
      _instance;
} _mPathMetadata_default_instance_;
namespace protobuf_messageRobotics_2eproto {
static void InitDefaultsmControl8Ch() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_mControl8Ch_default_instance_;
    new (ptr) ::mControl8Ch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mControl8Ch::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_mControl8Ch =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmControl8Ch}, {}};

static void InitDefaultsmDifferentialControl8Ch() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_mDifferentialControl8Ch_default_instance_;
    new (ptr) ::mDifferentialControl8Ch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mDifferentialControl8Ch::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_mDifferentialControl8Ch =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmDifferentialControl8Ch}, {}};

static void InitDefaultsmRobotMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_mRobotMetadata_default_instance_;
    new (ptr) ::mRobotMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mRobotMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_mRobotMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmRobotMetadata}, {}};

static void InitDefaultsmPathMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_mPathMetadata_default_instance_;
    new (ptr) ::mPathMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mPathMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_mPathMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsmPathMetadata}, {
      &protobuf_messageRobotics_2eproto::scc_info_mRobotMetadata.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_mControl8Ch.base);
  ::google::protobuf::internal::InitSCC(&scc_info_mDifferentialControl8Ch.base);
  ::google::protobuf::internal::InitSCC(&scc_info_mRobotMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_mPathMetadata.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mControl8Ch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mControl8Ch, roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mControl8Ch, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mControl8Ch, throttle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mControl8Ch, yaw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mControl8Ch, reserved_0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mControl8Ch, reserved_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mControl8Ch, reserved_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mControl8Ch, reserved_3_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mDifferentialControl8Ch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mDifferentialControl8Ch, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mDifferentialControl8Ch, roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mDifferentialControl8Ch, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mDifferentialControl8Ch, throttle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mDifferentialControl8Ch, yaw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mDifferentialControl8Ch, reserved_0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mDifferentialControl8Ch, reserved_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mDifferentialControl8Ch, reserved_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mDifferentialControl8Ch, reserved_3_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mRobotMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mRobotMetadata, mac_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mRobotMetadata, qw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mRobotMetadata, qx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mRobotMetadata, qy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mRobotMetadata, qz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mRobotMetadata, tx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mRobotMetadata, ty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mRobotMetadata, tz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mRobotMetadata, scan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mRobotMetadata, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mRobotMetadata, writable_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mPathMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mPathMetadata, map_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mPathMetadata, robot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mPathMetadata, waypoints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mPathMetadata, path_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mControl8Ch)},
  { 13, -1, sizeof(::mDifferentialControl8Ch)},
  { 27, -1, sizeof(::mRobotMetadata)},
  { 43, -1, sizeof(::mPathMetadata)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_mControl8Ch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_mDifferentialControl8Ch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_mRobotMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_mPathMetadata_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "messageRobotics.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025messageRobotics.proto\"\231\001\n\013mControl8Ch\022"
      "\014\n\004roll\030\001 \001(\r\022\r\n\005pitch\030\002 \001(\r\022\020\n\010throttle"
      "\030\003 \001(\r\022\013\n\003yaw\030\004 \001(\r\022\022\n\nreserved_0\030\005 \001(\r\022"
      "\022\n\nreserved_1\030\006 \001(\r\022\022\n\nreserved_2\030\007 \001(\r\022"
      "\022\n\nreserved_3\030\010 \001(\r\"\263\001\n\027mDifferentialCon"
      "trol8Ch\022\014\n\004time\030\001 \001(\001\022\014\n\004roll\030\002 \001(\005\022\r\n\005p"
      "itch\030\003 \001(\005\022\020\n\010throttle\030\004 \001(\005\022\013\n\003yaw\030\005 \001("
      "\005\022\022\n\nreserved_0\030\006 \001(\005\022\022\n\nreserved_1\030\007 \001("
      "\005\022\022\n\nreserved_2\030\010 \001(\005\022\022\n\nreserved_3\030\t \001("
      "\005\"\251\001\n\016mRobotMetadata\022\020\n\010mac_addr\030\001 \001(\006\022\n"
      "\n\002qw\030\002 \001(\002\022\n\n\002qx\030\003 \001(\002\022\n\n\002qy\030\004 \001(\002\022\n\n\002qz"
      "\030\005 \001(\002\022\n\n\002tx\030\006 \001(\002\022\n\n\002ty\030\007 \001(\002\022\n\n\002tz\030\010 \001"
      "(\002\022\014\n\004scan\030\t \001(\014\022\021\n\ttimestamp\030\n \001(\001\022\020\n\010w"
      "ritable\030\013 \001(\010\"`\n\rmPathMetadata\022\016\n\006map_id"
      "\030\001 \001(\r\022\036\n\005robot\030\002 \001(\0132\017.mRobotMetadata\022\021"
      "\n\twaypoints\030\003 \001(\014\022\014\n\004path\030\004 \001(\014b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 639);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messageRobotics.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_messageRobotics_2eproto

// ===================================================================

void mControl8Ch::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int mControl8Ch::kRollFieldNumber;
const int mControl8Ch::kPitchFieldNumber;
const int mControl8Ch::kThrottleFieldNumber;
const int mControl8Ch::kYawFieldNumber;
const int mControl8Ch::kReserved0FieldNumber;
const int mControl8Ch::kReserved1FieldNumber;
const int mControl8Ch::kReserved2FieldNumber;
const int mControl8Ch::kReserved3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

mControl8Ch::mControl8Ch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messageRobotics_2eproto::scc_info_mControl8Ch.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mControl8Ch)
}
mControl8Ch::mControl8Ch(const mControl8Ch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roll_, &from.roll_,
    static_cast<size_t>(reinterpret_cast<char*>(&reserved_3_) -
    reinterpret_cast<char*>(&roll_)) + sizeof(reserved_3_));
  // @@protoc_insertion_point(copy_constructor:mControl8Ch)
}

void mControl8Ch::SharedCtor() {
  ::memset(&roll_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reserved_3_) -
      reinterpret_cast<char*>(&roll_)) + sizeof(reserved_3_));
}

mControl8Ch::~mControl8Ch() {
  // @@protoc_insertion_point(destructor:mControl8Ch)
  SharedDtor();
}

void mControl8Ch::SharedDtor() {
}

void mControl8Ch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* mControl8Ch::descriptor() {
  ::protobuf_messageRobotics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messageRobotics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const mControl8Ch& mControl8Ch::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messageRobotics_2eproto::scc_info_mControl8Ch.base);
  return *internal_default_instance();
}


void mControl8Ch::Clear() {
// @@protoc_insertion_point(message_clear_start:mControl8Ch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roll_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reserved_3_) -
      reinterpret_cast<char*>(&roll_)) + sizeof(reserved_3_));
  _internal_metadata_.Clear();
}

bool mControl8Ch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mControl8Ch)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 roll = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pitch = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 throttle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &throttle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 yaw = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reserved_0 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reserved_0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reserved_1 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reserved_1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reserved_2 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reserved_2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reserved_3 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reserved_3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mControl8Ch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mControl8Ch)
  return false;
#undef DO_
}

void mControl8Ch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mControl8Ch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 roll = 1;
  if (this->roll() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->roll(), output);
  }

  // uint32 pitch = 2;
  if (this->pitch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pitch(), output);
  }

  // uint32 throttle = 3;
  if (this->throttle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->throttle(), output);
  }

  // uint32 yaw = 4;
  if (this->yaw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->yaw(), output);
  }

  // uint32 reserved_0 = 5;
  if (this->reserved_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->reserved_0(), output);
  }

  // uint32 reserved_1 = 6;
  if (this->reserved_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->reserved_1(), output);
  }

  // uint32 reserved_2 = 7;
  if (this->reserved_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->reserved_2(), output);
  }

  // uint32 reserved_3 = 8;
  if (this->reserved_3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->reserved_3(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mControl8Ch)
}

::google::protobuf::uint8* mControl8Ch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mControl8Ch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 roll = 1;
  if (this->roll() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->roll(), target);
  }

  // uint32 pitch = 2;
  if (this->pitch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pitch(), target);
  }

  // uint32 throttle = 3;
  if (this->throttle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->throttle(), target);
  }

  // uint32 yaw = 4;
  if (this->yaw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->yaw(), target);
  }

  // uint32 reserved_0 = 5;
  if (this->reserved_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->reserved_0(), target);
  }

  // uint32 reserved_1 = 6;
  if (this->reserved_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->reserved_1(), target);
  }

  // uint32 reserved_2 = 7;
  if (this->reserved_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->reserved_2(), target);
  }

  // uint32 reserved_3 = 8;
  if (this->reserved_3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->reserved_3(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mControl8Ch)
  return target;
}

size_t mControl8Ch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mControl8Ch)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 roll = 1;
  if (this->roll() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roll());
  }

  // uint32 pitch = 2;
  if (this->pitch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pitch());
  }

  // uint32 throttle = 3;
  if (this->throttle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->throttle());
  }

  // uint32 yaw = 4;
  if (this->yaw() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->yaw());
  }

  // uint32 reserved_0 = 5;
  if (this->reserved_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reserved_0());
  }

  // uint32 reserved_1 = 6;
  if (this->reserved_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reserved_1());
  }

  // uint32 reserved_2 = 7;
  if (this->reserved_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reserved_2());
  }

  // uint32 reserved_3 = 8;
  if (this->reserved_3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reserved_3());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void mControl8Ch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mControl8Ch)
  GOOGLE_DCHECK_NE(&from, this);
  const mControl8Ch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const mControl8Ch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mControl8Ch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mControl8Ch)
    MergeFrom(*source);
  }
}

void mControl8Ch::MergeFrom(const mControl8Ch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mControl8Ch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roll() != 0) {
    set_roll(from.roll());
  }
  if (from.pitch() != 0) {
    set_pitch(from.pitch());
  }
  if (from.throttle() != 0) {
    set_throttle(from.throttle());
  }
  if (from.yaw() != 0) {
    set_yaw(from.yaw());
  }
  if (from.reserved_0() != 0) {
    set_reserved_0(from.reserved_0());
  }
  if (from.reserved_1() != 0) {
    set_reserved_1(from.reserved_1());
  }
  if (from.reserved_2() != 0) {
    set_reserved_2(from.reserved_2());
  }
  if (from.reserved_3() != 0) {
    set_reserved_3(from.reserved_3());
  }
}

void mControl8Ch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mControl8Ch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mControl8Ch::CopyFrom(const mControl8Ch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mControl8Ch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mControl8Ch::IsInitialized() const {
  return true;
}

void mControl8Ch::Swap(mControl8Ch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void mControl8Ch::InternalSwap(mControl8Ch* other) {
  using std::swap;
  swap(roll_, other->roll_);
  swap(pitch_, other->pitch_);
  swap(throttle_, other->throttle_);
  swap(yaw_, other->yaw_);
  swap(reserved_0_, other->reserved_0_);
  swap(reserved_1_, other->reserved_1_);
  swap(reserved_2_, other->reserved_2_);
  swap(reserved_3_, other->reserved_3_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata mControl8Ch::GetMetadata() const {
  protobuf_messageRobotics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messageRobotics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void mDifferentialControl8Ch::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int mDifferentialControl8Ch::kTimeFieldNumber;
const int mDifferentialControl8Ch::kRollFieldNumber;
const int mDifferentialControl8Ch::kPitchFieldNumber;
const int mDifferentialControl8Ch::kThrottleFieldNumber;
const int mDifferentialControl8Ch::kYawFieldNumber;
const int mDifferentialControl8Ch::kReserved0FieldNumber;
const int mDifferentialControl8Ch::kReserved1FieldNumber;
const int mDifferentialControl8Ch::kReserved2FieldNumber;
const int mDifferentialControl8Ch::kReserved3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

mDifferentialControl8Ch::mDifferentialControl8Ch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messageRobotics_2eproto::scc_info_mDifferentialControl8Ch.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mDifferentialControl8Ch)
}
mDifferentialControl8Ch::mDifferentialControl8Ch(const mDifferentialControl8Ch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&reserved_3_) -
    reinterpret_cast<char*>(&time_)) + sizeof(reserved_3_));
  // @@protoc_insertion_point(copy_constructor:mDifferentialControl8Ch)
}

void mDifferentialControl8Ch::SharedCtor() {
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reserved_3_) -
      reinterpret_cast<char*>(&time_)) + sizeof(reserved_3_));
}

mDifferentialControl8Ch::~mDifferentialControl8Ch() {
  // @@protoc_insertion_point(destructor:mDifferentialControl8Ch)
  SharedDtor();
}

void mDifferentialControl8Ch::SharedDtor() {
}

void mDifferentialControl8Ch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* mDifferentialControl8Ch::descriptor() {
  ::protobuf_messageRobotics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messageRobotics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const mDifferentialControl8Ch& mDifferentialControl8Ch::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messageRobotics_2eproto::scc_info_mDifferentialControl8Ch.base);
  return *internal_default_instance();
}


void mDifferentialControl8Ch::Clear() {
// @@protoc_insertion_point(message_clear_start:mDifferentialControl8Ch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reserved_3_) -
      reinterpret_cast<char*>(&time_)) + sizeof(reserved_3_));
  _internal_metadata_.Clear();
}

bool mDifferentialControl8Ch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mDifferentialControl8Ch)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 roll = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pitch = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 throttle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &throttle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 yaw = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 reserved_0 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reserved_0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 reserved_1 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reserved_1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 reserved_2 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reserved_2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 reserved_3 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reserved_3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mDifferentialControl8Ch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mDifferentialControl8Ch)
  return false;
#undef DO_
}

void mDifferentialControl8Ch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mDifferentialControl8Ch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->time(), output);
  }

  // int32 roll = 2;
  if (this->roll() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->roll(), output);
  }

  // int32 pitch = 3;
  if (this->pitch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pitch(), output);
  }

  // int32 throttle = 4;
  if (this->throttle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->throttle(), output);
  }

  // int32 yaw = 5;
  if (this->yaw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->yaw(), output);
  }

  // int32 reserved_0 = 6;
  if (this->reserved_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->reserved_0(), output);
  }

  // int32 reserved_1 = 7;
  if (this->reserved_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->reserved_1(), output);
  }

  // int32 reserved_2 = 8;
  if (this->reserved_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->reserved_2(), output);
  }

  // int32 reserved_3 = 9;
  if (this->reserved_3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->reserved_3(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mDifferentialControl8Ch)
}

::google::protobuf::uint8* mDifferentialControl8Ch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mDifferentialControl8Ch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->time(), target);
  }

  // int32 roll = 2;
  if (this->roll() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->roll(), target);
  }

  // int32 pitch = 3;
  if (this->pitch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pitch(), target);
  }

  // int32 throttle = 4;
  if (this->throttle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->throttle(), target);
  }

  // int32 yaw = 5;
  if (this->yaw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->yaw(), target);
  }

  // int32 reserved_0 = 6;
  if (this->reserved_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->reserved_0(), target);
  }

  // int32 reserved_1 = 7;
  if (this->reserved_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->reserved_1(), target);
  }

  // int32 reserved_2 = 8;
  if (this->reserved_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->reserved_2(), target);
  }

  // int32 reserved_3 = 9;
  if (this->reserved_3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->reserved_3(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mDifferentialControl8Ch)
  return target;
}

size_t mDifferentialControl8Ch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mDifferentialControl8Ch)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double time = 1;
  if (this->time() != 0) {
    total_size += 1 + 8;
  }

  // int32 roll = 2;
  if (this->roll() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roll());
  }

  // int32 pitch = 3;
  if (this->pitch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pitch());
  }

  // int32 throttle = 4;
  if (this->throttle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->throttle());
  }

  // int32 yaw = 5;
  if (this->yaw() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->yaw());
  }

  // int32 reserved_0 = 6;
  if (this->reserved_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reserved_0());
  }

  // int32 reserved_1 = 7;
  if (this->reserved_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reserved_1());
  }

  // int32 reserved_2 = 8;
  if (this->reserved_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reserved_2());
  }

  // int32 reserved_3 = 9;
  if (this->reserved_3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reserved_3());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void mDifferentialControl8Ch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mDifferentialControl8Ch)
  GOOGLE_DCHECK_NE(&from, this);
  const mDifferentialControl8Ch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const mDifferentialControl8Ch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mDifferentialControl8Ch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mDifferentialControl8Ch)
    MergeFrom(*source);
  }
}

void mDifferentialControl8Ch::MergeFrom(const mDifferentialControl8Ch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mDifferentialControl8Ch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.roll() != 0) {
    set_roll(from.roll());
  }
  if (from.pitch() != 0) {
    set_pitch(from.pitch());
  }
  if (from.throttle() != 0) {
    set_throttle(from.throttle());
  }
  if (from.yaw() != 0) {
    set_yaw(from.yaw());
  }
  if (from.reserved_0() != 0) {
    set_reserved_0(from.reserved_0());
  }
  if (from.reserved_1() != 0) {
    set_reserved_1(from.reserved_1());
  }
  if (from.reserved_2() != 0) {
    set_reserved_2(from.reserved_2());
  }
  if (from.reserved_3() != 0) {
    set_reserved_3(from.reserved_3());
  }
}

void mDifferentialControl8Ch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mDifferentialControl8Ch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mDifferentialControl8Ch::CopyFrom(const mDifferentialControl8Ch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mDifferentialControl8Ch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mDifferentialControl8Ch::IsInitialized() const {
  return true;
}

void mDifferentialControl8Ch::Swap(mDifferentialControl8Ch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void mDifferentialControl8Ch::InternalSwap(mDifferentialControl8Ch* other) {
  using std::swap;
  swap(time_, other->time_);
  swap(roll_, other->roll_);
  swap(pitch_, other->pitch_);
  swap(throttle_, other->throttle_);
  swap(yaw_, other->yaw_);
  swap(reserved_0_, other->reserved_0_);
  swap(reserved_1_, other->reserved_1_);
  swap(reserved_2_, other->reserved_2_);
  swap(reserved_3_, other->reserved_3_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata mDifferentialControl8Ch::GetMetadata() const {
  protobuf_messageRobotics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messageRobotics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void mRobotMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int mRobotMetadata::kMacAddrFieldNumber;
const int mRobotMetadata::kQwFieldNumber;
const int mRobotMetadata::kQxFieldNumber;
const int mRobotMetadata::kQyFieldNumber;
const int mRobotMetadata::kQzFieldNumber;
const int mRobotMetadata::kTxFieldNumber;
const int mRobotMetadata::kTyFieldNumber;
const int mRobotMetadata::kTzFieldNumber;
const int mRobotMetadata::kScanFieldNumber;
const int mRobotMetadata::kTimestampFieldNumber;
const int mRobotMetadata::kWritableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

mRobotMetadata::mRobotMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messageRobotics_2eproto::scc_info_mRobotMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mRobotMetadata)
}
mRobotMetadata::mRobotMetadata(const mRobotMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scan().size() > 0) {
    scan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scan_);
  }
  ::memcpy(&mac_addr_, &from.mac_addr_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&mac_addr_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:mRobotMetadata)
}

void mRobotMetadata::SharedCtor() {
  scan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mac_addr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&mac_addr_)) + sizeof(timestamp_));
}

mRobotMetadata::~mRobotMetadata() {
  // @@protoc_insertion_point(destructor:mRobotMetadata)
  SharedDtor();
}

void mRobotMetadata::SharedDtor() {
  scan_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void mRobotMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* mRobotMetadata::descriptor() {
  ::protobuf_messageRobotics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messageRobotics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const mRobotMetadata& mRobotMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messageRobotics_2eproto::scc_info_mRobotMetadata.base);
  return *internal_default_instance();
}


void mRobotMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:mRobotMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scan_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mac_addr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&mac_addr_)) + sizeof(timestamp_));
  _internal_metadata_.Clear();
}

bool mRobotMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mRobotMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed64 mac_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &mac_addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float qw = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &qw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float qx = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &qx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float qy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &qy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float qz = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &qz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float tx = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ty = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float tz = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes scan = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_scan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double timestamp = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool writable = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &writable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mRobotMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mRobotMetadata)
  return false;
#undef DO_
}

void mRobotMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mRobotMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 mac_addr = 1;
  if (this->mac_addr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->mac_addr(), output);
  }

  // float qw = 2;
  if (this->qw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->qw(), output);
  }

  // float qx = 3;
  if (this->qx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->qx(), output);
  }

  // float qy = 4;
  if (this->qy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->qy(), output);
  }

  // float qz = 5;
  if (this->qz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->qz(), output);
  }

  // float tx = 6;
  if (this->tx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->tx(), output);
  }

  // float ty = 7;
  if (this->ty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->ty(), output);
  }

  // float tz = 8;
  if (this->tz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->tz(), output);
  }

  // bytes scan = 9;
  if (this->scan().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->scan(), output);
  }

  // double timestamp = 10;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->timestamp(), output);
  }

  // bool writable = 11;
  if (this->writable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->writable(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mRobotMetadata)
}

::google::protobuf::uint8* mRobotMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mRobotMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 mac_addr = 1;
  if (this->mac_addr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->mac_addr(), target);
  }

  // float qw = 2;
  if (this->qw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->qw(), target);
  }

  // float qx = 3;
  if (this->qx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->qx(), target);
  }

  // float qy = 4;
  if (this->qy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->qy(), target);
  }

  // float qz = 5;
  if (this->qz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->qz(), target);
  }

  // float tx = 6;
  if (this->tx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->tx(), target);
  }

  // float ty = 7;
  if (this->ty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->ty(), target);
  }

  // float tz = 8;
  if (this->tz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->tz(), target);
  }

  // bytes scan = 9;
  if (this->scan().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->scan(), target);
  }

  // double timestamp = 10;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->timestamp(), target);
  }

  // bool writable = 11;
  if (this->writable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->writable(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mRobotMetadata)
  return target;
}

size_t mRobotMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mRobotMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes scan = 9;
  if (this->scan().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->scan());
  }

  // fixed64 mac_addr = 1;
  if (this->mac_addr() != 0) {
    total_size += 1 + 8;
  }

  // float qw = 2;
  if (this->qw() != 0) {
    total_size += 1 + 4;
  }

  // float qx = 3;
  if (this->qx() != 0) {
    total_size += 1 + 4;
  }

  // float qy = 4;
  if (this->qy() != 0) {
    total_size += 1 + 4;
  }

  // float qz = 5;
  if (this->qz() != 0) {
    total_size += 1 + 4;
  }

  // float tx = 6;
  if (this->tx() != 0) {
    total_size += 1 + 4;
  }

  // float ty = 7;
  if (this->ty() != 0) {
    total_size += 1 + 4;
  }

  // float tz = 8;
  if (this->tz() != 0) {
    total_size += 1 + 4;
  }

  // bool writable = 11;
  if (this->writable() != 0) {
    total_size += 1 + 1;
  }

  // double timestamp = 10;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void mRobotMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mRobotMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const mRobotMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const mRobotMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mRobotMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mRobotMetadata)
    MergeFrom(*source);
  }
}

void mRobotMetadata::MergeFrom(const mRobotMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mRobotMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scan().size() > 0) {

    scan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scan_);
  }
  if (from.mac_addr() != 0) {
    set_mac_addr(from.mac_addr());
  }
  if (from.qw() != 0) {
    set_qw(from.qw());
  }
  if (from.qx() != 0) {
    set_qx(from.qx());
  }
  if (from.qy() != 0) {
    set_qy(from.qy());
  }
  if (from.qz() != 0) {
    set_qz(from.qz());
  }
  if (from.tx() != 0) {
    set_tx(from.tx());
  }
  if (from.ty() != 0) {
    set_ty(from.ty());
  }
  if (from.tz() != 0) {
    set_tz(from.tz());
  }
  if (from.writable() != 0) {
    set_writable(from.writable());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void mRobotMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mRobotMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mRobotMetadata::CopyFrom(const mRobotMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mRobotMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mRobotMetadata::IsInitialized() const {
  return true;
}

void mRobotMetadata::Swap(mRobotMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void mRobotMetadata::InternalSwap(mRobotMetadata* other) {
  using std::swap;
  scan_.Swap(&other->scan_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mac_addr_, other->mac_addr_);
  swap(qw_, other->qw_);
  swap(qx_, other->qx_);
  swap(qy_, other->qy_);
  swap(qz_, other->qz_);
  swap(tx_, other->tx_);
  swap(ty_, other->ty_);
  swap(tz_, other->tz_);
  swap(writable_, other->writable_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata mRobotMetadata::GetMetadata() const {
  protobuf_messageRobotics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messageRobotics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void mPathMetadata::InitAsDefaultInstance() {
  ::_mPathMetadata_default_instance_._instance.get_mutable()->robot_ = const_cast< ::mRobotMetadata*>(
      ::mRobotMetadata::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int mPathMetadata::kMapIdFieldNumber;
const int mPathMetadata::kRobotFieldNumber;
const int mPathMetadata::kWaypointsFieldNumber;
const int mPathMetadata::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

mPathMetadata::mPathMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messageRobotics_2eproto::scc_info_mPathMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mPathMetadata)
}
mPathMetadata::mPathMetadata(const mPathMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  waypoints_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.waypoints().size() > 0) {
    waypoints_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.waypoints_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_robot()) {
    robot_ = new ::mRobotMetadata(*from.robot_);
  } else {
    robot_ = NULL;
  }
  map_id_ = from.map_id_;
  // @@protoc_insertion_point(copy_constructor:mPathMetadata)
}

void mPathMetadata::SharedCtor() {
  waypoints_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&robot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&map_id_) -
      reinterpret_cast<char*>(&robot_)) + sizeof(map_id_));
}

mPathMetadata::~mPathMetadata() {
  // @@protoc_insertion_point(destructor:mPathMetadata)
  SharedDtor();
}

void mPathMetadata::SharedDtor() {
  waypoints_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete robot_;
}

void mPathMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* mPathMetadata::descriptor() {
  ::protobuf_messageRobotics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messageRobotics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const mPathMetadata& mPathMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messageRobotics_2eproto::scc_info_mPathMetadata.base);
  return *internal_default_instance();
}


void mPathMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:mPathMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  waypoints_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && robot_ != NULL) {
    delete robot_;
  }
  robot_ = NULL;
  map_id_ = 0u;
  _internal_metadata_.Clear();
}

bool mPathMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mPathMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 map_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &map_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mRobotMetadata robot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_robot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes waypoints = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_waypoints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes path = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mPathMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mPathMetadata)
  return false;
#undef DO_
}

void mPathMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mPathMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 map_id = 1;
  if (this->map_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->map_id(), output);
  }

  // .mRobotMetadata robot = 2;
  if (this->has_robot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_robot(), output);
  }

  // bytes waypoints = 3;
  if (this->waypoints().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->waypoints(), output);
  }

  // bytes path = 4;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mPathMetadata)
}

::google::protobuf::uint8* mPathMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mPathMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 map_id = 1;
  if (this->map_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->map_id(), target);
  }

  // .mRobotMetadata robot = 2;
  if (this->has_robot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_robot(), deterministic, target);
  }

  // bytes waypoints = 3;
  if (this->waypoints().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->waypoints(), target);
  }

  // bytes path = 4;
  if (this->path().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mPathMetadata)
  return target;
}

size_t mPathMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mPathMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes waypoints = 3;
  if (this->waypoints().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->waypoints());
  }

  // bytes path = 4;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->path());
  }

  // .mRobotMetadata robot = 2;
  if (this->has_robot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *robot_);
  }

  // uint32 map_id = 1;
  if (this->map_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->map_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void mPathMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mPathMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const mPathMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const mPathMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mPathMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mPathMetadata)
    MergeFrom(*source);
  }
}

void mPathMetadata::MergeFrom(const mPathMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mPathMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.waypoints().size() > 0) {

    waypoints_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.waypoints_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_robot()) {
    mutable_robot()->::mRobotMetadata::MergeFrom(from.robot());
  }
  if (from.map_id() != 0) {
    set_map_id(from.map_id());
  }
}

void mPathMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mPathMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mPathMetadata::CopyFrom(const mPathMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mPathMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mPathMetadata::IsInitialized() const {
  return true;
}

void mPathMetadata::Swap(mPathMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void mPathMetadata::InternalSwap(mPathMetadata* other) {
  using std::swap;
  waypoints_.Swap(&other->waypoints_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(robot_, other->robot_);
  swap(map_id_, other->map_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata mPathMetadata::GetMetadata() const {
  protobuf_messageRobotics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messageRobotics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mControl8Ch* Arena::CreateMaybeMessage< ::mControl8Ch >(Arena* arena) {
  return Arena::CreateInternal< ::mControl8Ch >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mDifferentialControl8Ch* Arena::CreateMaybeMessage< ::mDifferentialControl8Ch >(Arena* arena) {
  return Arena::CreateInternal< ::mDifferentialControl8Ch >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mRobotMetadata* Arena::CreateMaybeMessage< ::mRobotMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::mRobotMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mPathMetadata* Arena::CreateMaybeMessage< ::mPathMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::mPathMetadata >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
